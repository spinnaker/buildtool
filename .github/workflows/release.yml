name: Release

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+"

  workflow_dispatch:
    inputs:
      tag:
        description: 'Release version, for example: v1.30.0, v1.31.1-rc.1'
        type: string
        required: true
      dryRun:
        description: 'Perform a dry_run regardless of tag. "-rc*" are always dry run.'
        default: 'true'
        options:
        - 'true'
        - 'false'
        type: choice
        required: true

env:
  # Bump this when new releases require a newer Halyard version.
  MINIMUM_HALYARD_VERSION: "1.45"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies with pip
        run: |
          pip install -r dev/requirements.txt
          pip install -r dev/buildtool/requirements.txt
      - name: Setup git
        run: |
          git config --global user.email "sig-platform@spinnaker.io"
          git config --global user.name "Spinnaker GHA"

      - name: Assemble release info
        id: release_info
        run: |
          echo REPOSITORY_OWNER="${GITHUB_REPOSITORY%/*}" >> $GITHUB_OUTPUT

          if [[ "${{ inputs.tag }}" != "" ]]; then
            tag="${{ inputs.tag }}"
          else
            tag="$( echo ${{ github.ref }} | sed 's@refs/tags/@@')"
          fi
          echo "Using tag: ${tag}"

          semver="${tag##v}"
          echo "Using semver: ${semver}"

          if [[ "${semver}" == *-rc* ]]; then
            echo "Release candidate detected."
            rc="true"
            version="${semver%%-rc*}"
          else
           echo "Final version detected."
           rc="false"
           version="${semver}"
          fi

          if [[ "${{ inputs.dryRun }}" == "true" ]]; then
            echo "Manual trigger with dry run selected, overriding release candidate status."
            rc="true"
          fi

          echo IS_CANDIDATE="${rc}" >> $GITHUB_OUTPUT
          echo VERSION="${version}" >> $GITHUB_OUTPUT

          echo "Running publish_spinnaker for version: ${version} - release candidate: ${rc}"

      - name: Publish release - dry run
        run: |
          ./dev/buildtool.sh \
            publish_spinnaker \
            --spinnaker_version "${{ steps.release_info.outputs.VERSION }}" \
            --minimum_halyard_version "${{ env.MINIMUM_HALYARD_VERSION }}" \
            --github_owner "${{ steps.release_info.outputs.REPOSITORY_OWNER }}" \
            --dry_run true

      - name: Cat output files for review
        run: |
          for f in \
            output/build_bom/*.yml \
            output/publish_spinnaker/changelog.md \
            output/update_versions/versions.yml \
            ; do echo -e "\n*** ${f} ***"; cat "${f}"; done

      - name: Attach output files to GHA Job
        uses: actions/upload-artifact@v3
        with:
          name: spinnaker_release_${{ steps.release_info.outputs.VERSION }}
          path: |
            output/build_bom/*.yml
            output/publish_spinnaker/changelog.md
            output/update_versions/versions.yml
